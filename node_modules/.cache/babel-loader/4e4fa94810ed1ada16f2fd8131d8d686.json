{"ast":null,"code":"import _defineProperty from \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport Section from \"./Section/Section\";\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    _this.countTotalFeedback = function () {\n      var _this$state = _this.state,\n          good = _this$state.good,\n          neutral = _this$state.neutral,\n          bad = _this$state.bad;\n      return good + neutral + bad;\n    };\n\n    _this.countPositiveFeedbackPercentage = function () {\n      var total = _this.countTotalFeedback;\n      var good = _this.state.good;\n      var percentage = Math.round(good / total * 100);\n    };\n\n    _this.onLeaveFeedback = function (key) {\n      _this.setState(function (prevState) {\n        return _defineProperty({}, key, prevState[key] + 1);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          good = _this$state2.good,\n          neutral = _this$state2.neutral,\n          bad = _this$state2.bad;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Section, {\n        title: \"Please leave feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(FeedbackOptions, {\n        options: Object.keys(this.state),\n        onClick: this.onLeaveFeedback,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      })), /*#__PURE__*/React.createElement(Notification, {\n        message: \"There is no feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/andrpoch25/Desktop/MY-RESUME/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","Section","FeedbackOptions","Statistics","Notification","App","state","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","total","percentage","Math","round","onLeaveFeedback","key","setState","prevState","Object","keys"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;IAGMC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACRC,MAAAA,IAAI,EAAE,CADE;AAERC,MAAAA,OAAO,EAAE,CAFD;AAGRC,MAAAA,GAAG,EAAE;AAHG,K;;UAKRC,kB,GAAqB,YAAM;AAAA,wBACM,MAAKJ,KADX;AAAA,UACjBC,IADiB,eACjBA,IADiB;AAAA,UACXC,OADW,eACXA,OADW;AAAA,UACFC,GADE,eACFA,GADE;AAEzB,aAAOF,IAAI,GAAGC,OAAP,GAAiBC,GAAxB;AACD,K;;UACDE,+B,GAAkC,YAAM;AACtC,UAAMC,KAAK,GAAG,MAAKF,kBAAnB;AADsC,UAE9BH,IAF8B,GAErB,MAAKD,KAFgB,CAE9BC,IAF8B;AAGtC,UAAMM,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAYR,IAAI,GAAGK,KAAR,GAAiB,GAA5B,CAAnB;AACD,K;;UACDI,e,GAAkB,UAACC,GAAD,EAAS;AACzB,YAAKC,QAAL,CAAc,UAACC,SAAD;AAAA,mCACXF,GADW,EACLE,SAAS,CAACF,GAAD,CAAT,GAAiB,CADZ;AAAA,OAAd;AAGD,K;;;;;;;6BACQ;AAAA,yBACwB,KAAKX,KAD7B;AAAA,UACCC,IADD,gBACCA,IADD;AAAA,UACOC,OADP,gBACOA,OADP;AAAA,UACgBC,GADhB,gBACgBA,GADhB;AAEP,0BACE,uDACF,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AACA,QAAA,OAAO,EAAEW,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAjB,CADT;AAEA,QAAA,OAAO,EAAE,KAAKU,eAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADE,eAOA,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAC,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,CADF;AAWD;;;;EAjCehB,S;;AAoClB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Section from \"./Section/Section\";\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\nimport Notification from './Notification/Notification';\n\n\nclass App extends Component {\n  state = { \n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback;\n    const { good } = this.state;\n    const percentage = Math.round((good / total) * 100);\n  }\n  onLeaveFeedback = (key) => {\n    this.setState((prevState) => ({\n      [key]: prevState[key] + 1,\n    }))\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n    <Section title='Please leave feedback'>\n        <FeedbackOptions\n        options={Object.keys(this.state)}\n        onClick={this.onLeaveFeedback}>\n        </FeedbackOptions>\n  </Section>\n      <Notification message=\"There is no feedback\"></Notification>\n      </>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}